from typing import Annotated, TypedDict, List, Any
from langgraph.graph.message import add_messages
import operator

# GraphState 상태 정의
class CanonState(TypedDict):
    question: Annotated[str, "Question"] # parentgraph 공유
    transform_question: Annotated[list, "Transformed queries generated by LLM"]
    multi_context: Annotated[list[str], operator.add]
    ensemble_context: Annotated[str, "Ensemble_context"]
    filtered_context: Annotated[str, "Filtering Context"]
    context: Annotated[str, "Context"]  # parentgraph 공유
    answer: Annotated[str, "Answer"]  # parentgraph 공유

class QueryState(TypedDict):
    query: str
